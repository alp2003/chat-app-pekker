services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: chat
      POSTGRES_PASSWORD: chat
      POSTGRES_DB: chat
    ports: ['5432:5432']
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U chat']
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    ports: ['6379:6379']
    volumes:
      - redis_data:/data

  api:
    build: 
      context: .
      dockerfile: ./apps/api/Dockerfile
    env_file:
      - .env
    environment:
      NODE_ENV: production
      API_PORT: 3001
      REDIS_URL: redis://redis:6379
      DATABASE_URL: postgresql://chat:chat@postgres:5432/chat
    ports: ['3001:3001']
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  web:
    build: 
      context: .
      dockerfile: ./apps/web/Dockerfile
    env_file:
      - .env
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_SOCKET_URL: http://localhost:3001
      PORT: 3000
    ports: ['3000:3000']
    depends_on:
      api:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
